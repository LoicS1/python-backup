# IPython log file

import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import numpy as np
a = np.random.randn(10000)
plt.hist(a)
#[Out]# (array([  3.00000000e+00,   2.90000000e+01,   2.43000000e+02,
#[Out]#          1.06200000e+03,   2.53100000e+03,   3.13400000e+03,
#[Out]#          2.13000000e+03,   7.21000000e+02,   1.30000000e+02,
#[Out]#          1.70000000e+01]), array([-4.41877319, -3.59195992, -2.76514666, -1.9383334 , -1.11152013,
#[Out]#        -0.28470687,  0.54210639,  1.36891966,  2.19573292,  3.02254618,
#[Out]#         3.84935945]), <a list of 10 Patch objects>)
plt.savefig('1.3.2/Histogram')
%logstart -ort 1.3.2/logs/Scomparin_1.3.2.#.log
# Loic Scomparin 1.3.2 IPython Log
5 + 3
#[Out]# 8
1.0
#[Out]# 1.0
1
#[Out]# 1
1.0 == 1
#[Out]# True
3 == 3.5
#[Out]# False
7*2
#[Out]# 14
7*2.
#[Out]# 14.0
# having a float in the operation results in a solution with a float. having only ints is required for the solution to have ints
ln 7/2
7/2
#[Out]# 3
7/.2
#[Out]# 35.0
7/2.
#[Out]# 3.5
# 7b. int/int returns a int (so the actual solution rounded down), whereas int/float returns an exact solution
# 8. Assignment
student_age = 16
%logstop
student_age
#[Out]# 16
student_age * 3
#[Out]# 48
student age ** 2
student_age ** 2
#[Out]# 256
abs(-10)
#[Out]# 10
%run 1.3.2/Scomparin_1.3.2.py #runs code in editor
def add_tip(total, tip_percent): 
    '''Return the total amount including tip'''
    tip = tip_percent*total
    return total + tip
$run 1.3.2/Scomparin_1.3.2.py #runs code in editor
%run 1.3.2/Scomparin_1.3.2.py #runs code in editor
# scratch used indents in the code blocks to contruct the structure
# the docstring will help the user remember the purpose of the function
%logstart -ort 1.3.2/logs/Last_1.3.2.#.log
%logstart -ort 1.3.2/logs/Scomparin_1.3.2.#.log
%logstart
%logstart -ort 1.3.2/logs/Scomparin_1.3.2.#.log
%logstart -ort 1.3.2/logs/Scomparin_1.3.2.2#.log
%logstart -ort 1.3.2/logs/Scomparin_1.3.2.2.log
%logstop
# Fri, 07 Dec 2018 21:10:14
# destroying local variables will help free up memory space
# Fri, 07 Dec 2018 21:12:11
# the compiler does all the translating of all one person has to say, and then tells everything to the other person
# Fri, 07 Dec 2018 21:15:45
#17a: hypotenuse test
# Fri, 07 Dec 2018 21:17:13
hyp(leg1, leg2) == (leg1**2 + leg2**2)**.5
# Fri, 07 Dec 2018 21:19:58
%run 1.3.2/Scomparin_1.3.2.py
# Fri, 07 Dec 2018 21:20:22
hyp(3,4)
#[Out]# 5.0
# Fri, 07 Dec 2018 21:21:47
mean(3,4,7)
# Fri, 07 Dec 2018 21:22:28
%run 1.3.2/Scomparin_1.3.2.py
# Fri, 07 Dec 2018 21:24:31
mean(3,4,7)
# Fri, 07 Dec 2018 21:25:52
%run 1.3.2/Scomparin_1.3.2.py
# Fri, 07 Dec 2018 21:25:56
mean(3,4,7)
#[Out]# 4.666666666666667
# Fri, 07 Dec 2018 21:26:18
# ignore float's last digits
# Fri, 07 Dec 2018 21:27:32
%run 1.3.2/Scomparin_1.3.2.py
# Fri, 07 Dec 2018 21:27:42
perimenter(2, 3)
# Fri, 07 Dec 2018 21:28:26
%run 1.3.2/Scomparin_1.3.2.py
# Fri, 07 Dec 2018 21:28:32
perimeter(2,3)
#[Out]# 10
# Fri, 07 Dec 2018 21:29:35
# Conclusion 1: sorting images in a folder should be automated
# Fri, 07 Dec 2018 21:30:21
#I learned about strings, and variables such ints, floats, and booleans.
# Fri, 07 Dec 2018 21:31:23
# In the code editor, is is easier to edit code and it is possible to add in more new lines. Ipython is mostly used to run code from the editor.
# Fri, 07 Dec 2018 21:32:36
# a function makes resusing code much more simple as everything does not need to be typed out again
# Fri, 07 Dec 2018 21:32:45
%run 1.3.2/Scomparin_1.3.2.py
# Fri, 07 Dec 2018 21:35:26
# the result is the printed solution to all the different equations that were entered into the editor. This could be used to find the price for a certain geometric shape of somthing 
# Fri, 07 Dec 2018 21:35:54
%logstop
